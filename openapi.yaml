openapi: 3.0.0
info:
  title: Sample API
  description: A sample API demonstrating different HTTP methods
  version: 1.0.0

servers:
  - url: http://api.example.com/v1

components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - species
        - owner_id
      properties:
        id:
          type: integer
          description: The ID of the pet
          minimum: 1
        name:
          type: string
          description: The name of the pet
          nullable: true
          default: "Fluffy"
          minLength: 1
          maxLength: 50
          pattern: "^[a-zA-Z0-9 ]*$"
        species:
          $ref: "#/components/schemas/Species"
          default: "cat"
        owner_id:
          type: integer
          description: The ID of the owner
          minimum: 1
        details:
          type: object
          description: Various details about the pet
          properties:
            age:
              type: integer
              description: The age of the pet
              minimum: 0
              maximum: 50
            email:
              type: string
              format: email
              description: Contact email for the pet
            website:
              type: string
              format: uri
              description: Pet's social media profile

    Owner:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          description: The ID of the owner
          minimum: 1
        name:
          type: string
          description: The name of the owner
          minLength: 2
          maxLength: 100
          pattern: "^[a-zA-Z ]*$"
        email:
          type: string
          format: email
          description: The owner's email address

    Species:
      type: string
      enum:
        - "cat"
        - "dog"

    ListPetsResponseBody:
      type: object
      required:
        - items
        - count
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Pet"
          minItems: 0
          maxItems: 100
          description: List of pets
        count:
          type: integer
          minimum: 0
          description: Total number of pets

    CreatePetRequestBody:
      type: object
      properties:
        name:
          type: string
        species:
          $ref: "#/components/schemas/Species"

    GroomingTool:
      type: object
      required:
        - id
      properties:
        id:
          type: integer

    PetStats:
      type: object
      required:
        - id
        - from_date
      properties:
        id:
          type: integer
        from_date:
          type: string
          format: date

    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string

paths:
  /owners/{id}:
    get:
      summary: Get an owner
      description: Retrieve details of a specific owner by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the owner to retrieve
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Owner"
        "404":
          description: Owner not found

  /owners:
    get:
      summary: Get all owners
      description: Retrieve details of all owners
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Owner"

  /grooming_tools:
    get:
      summary: Get all grooming tools
      description: Retrieve details of all grooming tools
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GroomingTool"

  /pets/{id}/owners:
    get:
      summary: Get a pet's owners
      description: Retrieve details of a specific pet's owners by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the pet to retrieve
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Owner"
        "404":
          description: Pet not found

  /pets/{id}:
    get:
      summary: Get a pet
      description: Retrieve details of a specific pet by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the pet to retrieve
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        "404":
          description: Pet not found

    put:
      summary: Update a pet
      description: Update an existing pet by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePetRequestBody"
      responses:
        "200":
          description: Pet updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"

    delete:
      summary: Delete a pet
      description: Remove a pet from the system
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Pet deleted successfully

    patch:
      summary: Partially update a pet
      description: Update specific fields of an existing pet
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePetRequestBody"
      responses:
        "200":
          description: Pet partially updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"

  /pets:
    get:
      summary: Get all pets
      description: Retrieve a list of all pets
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPetsResponseBody"

    post:
      summary: Create a new pet
      description: Add a new pet to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePetRequestBody"
      responses:
        "200":
          description: Pet created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"

  /pets/{id}/stats:
    get:
      summary: Get pet statistics
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: from_date
          in: query
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Pet statistics retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PetStats"
        "404":
          description: Pet not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
